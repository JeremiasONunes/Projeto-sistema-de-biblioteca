package main.java.com.biblioteca.view;

import main.java.com.biblioteca.exception.*;
import main.java.com.biblioteca.model.*;
import main.java.com.biblioteca.service.*;
import java.util.Scanner;

public class MenuPrincipal {
	Scanner sc = new Scanner(System.in);
	BibliotecaService Biblioteca = new BibliotecaService();
	
	public void iniciarSistema() {
		String opcao;
		System.out.println("Sistema Inicializando ...");
		System.out.println("Sistema Inicializado!");
		
		do {

			exibirMenuPrincipal();
			opcao = sc.nextLine();
			//sc.nextLine();
			try {
				switch (opcao) {
					case "1" ->  {cadastrarLivro();}
					case "2" ->  {cadastrarUsuario();}
					case "3" ->  {cadastrarEmprestimo();}
					case "4" ->  {pesquisarLivro();}
					case "5" ->  {pesquisarUsuario();}
					case "6" ->  {devolucao();}
					case "7" ->  {System.out.println("Listar usuarios");}
					case "8" ->  {System.out.println("listar emprestismos");}
					case "9" ->  {System.out.println("listar livros");}
					case "0" ->  {System.out.println("Sair");}
					default  ->  throw new IllegalArgumentException("Unexpected value: " + opcao);
				}
			} catch (Exception e) {
				System.out.println("Erro: " + e.getMessage());
			}			
		}while (opcao != "0");
	}
	private void exibirMenuPrincipal() {
		System.out.println("\n ==========================================");
		System.out.println("*       Escolha a opção abaixo              *");
		System.out.println("*                                           *");
		System.out.println("*    (1) - Cadastrar novo Livro             *");
		System.out.println("*    (2) - Cadastrar novo Usuário           *");
		System.out.println("*    (3) - Cadastrar novo empréstimo        *");
		System.out.println("*    (4) - pesquisar Livro                  *");
		System.out.println("*    (5) - pesquisar Usuário                *");
		System.out.println("*    (6) - Devolver Livro                   *");
		System.out.println("*    (7) - Listar Usuarios                  *");
		System.out.println("*    (8) - Listar Empréstimos               *");
		System.out.println("*    (9) - Listar Livros                    *");
		System.out.println("*    (0) - Sair do sistema                  *");
		System.out.println("*                                           *");
		System.out.println("  ==========================================");
	}
	
	
	
	private void cadastrarLivro() {
	
		System.out.println(" ==========================================");
		System.out.println("*       Digite o titulo do livro          *");
		System.out.println(" ==========================================");
		String titulo = sc.nextLine();
		
		System.out.println(" ==========================================");
		System.out.println("*       Digite o autor do livro           *");
		System.out.println(" ==========================================");
		String autor = sc.nextLine();
		
		System.out.println(" ==========================================");
		System.out.println("*       Digite o ano do livro             *");
		System.out.println(" ==========================================");
		int ano = sc.nextInt();
		sc.nextLine();
		exibirMenuCadastroLivro();
		String tipoLivro = sc.nextLine();
		
		try {
			switch (tipoLivro) {
				case "1"-> {
					System.out.println(" ==========================================");
					System.out.println("*       Digite o tamanho em MB do livro    *");
					System.out.println(" ==========================================");
					double tamanho = sc.nextDouble();
					sc.nextLine();
					Biblioteca.cadastrarLivro(new Ebook(titulo, autor, ano, tamanho));
				}
				case "2"-> {
					System.out.println(" ==========================================");
					System.out.println("*       Digite o nº de paginas do livro   *");
					System.out.println(" ==========================================");
					int paginas = sc.nextInt();
					sc.nextLine();
					Biblioteca.cadastrarLivro(new Livroimpresso(titulo, autor, ano, paginas));
				}
				case "0"-> {
					System.out.println(" ==========================================");
					System.out.println("*       Voltando ao menu anterior         *");
					System.out.println(" ==========================================");
				}
				default -> throw new IllegalArgumentException("Unexpected value: " + tipoLivro);}
		} catch (Exception e) {
			System.out.println("Erro: " + e.getMessage());
		}
		
	}
	
	//cadastro livro
	private void exibirMenuCadastroLivro() {
		System.out.println("\n  ==========================================");
		System.out.println("*       Escolha a opção abaixo              *");
		System.out.println("*                                           *");
		System.out.println("*    (1) - Cadastrar Ebook                  *");
		System.out.println("*    (2) - Cadastrar Livro Impresso         *");
		System.out.println("*    (0) - Voltar ao menu anterios          *");
		System.out.println("*                                           *");
		System.out.println("  ==========================================");
	}
	
	//Cadastro usuario
	private void cadastrarUsuario() {
		System.out.println(" ==========================================");
		System.out.println("*       Digite o nome do Usuario          *");
		System.out.println(" ==========================================");
		String nome = sc.nextLine();
		
		System.out.println(" ==========================================");
		System.out.println("*       Digite a matricula do usuario     *");
		System.out.println(" ==========================================");
		String matricula = sc.nextLine();
		
		
		exibirMenuCadastroUsuario();
		String tipoUsuario = sc.nextLine();
		
		try {
			switch (tipoUsuario) {
				case "1"-> {
					System.out.println(" ==========================================");
					System.out.println("*   Digite o departamento do professor    *");
					System.out.println(" ==========================================");
					String departemento = sc.nextLine();	
					Biblioteca.cadastrarUsuario(new Professor(nome, matricula, departemento));
				}
				case "2"-> {
					System.out.println(" ==========================================");
					System.out.println("*   Digite o curso do aluno    *");
					System.out.println(" ==========================================");
					String curso = sc.nextLine();
					Biblioteca.cadastrarUsuario(new Aluno(nome, matricula, curso));
				}
				case "0"-> {
					System.out.println(" ==========================================");
					System.out.println("*       Voltando ao menu anterior         *");
					System.out.println(" ==========================================");
				}
				default -> throw new IllegalArgumentException("Unexpected value: " + tipoUsuario);}
		} catch (Exception e) {
			System.out.println("Erro: " + e.getMessage());
		}
		
	}
	
	private void exibirMenuCadastroUsuario() {
		System.out.println("\n ==========================================");
		System.out.println("*       Escolha a opção abaixo              *");
		System.out.println("*                                           *");
		System.out.println("*    (1) - Cadastrar Professor              *");
		System.out.println("*    (2) - Cadastrar Aluno                  *");
		System.out.println("*    (0) - Voltar ao menu anterios          *");
		System.out.println("*                                           *");
		System.out.println("  ==========================================");
	}
	
	
	//cadastrar emprestimo
	private void cadastrarEmprestimo() {
		System.out.println(" ==========================================");
		System.out.println("*       Digite o matricula do Usuario      *");
		System.out.println(" ==========================================");
		String matricula = sc.nextLine();
		
		System.out.println(" ==========================================");
		System.out.println("*       Digite o titulo do livro     *");
		System.out.println(" ==========================================");
		String titulo = sc.nextLine();}


	private void pesquisarLivro() {
		System.out.println(" ==========================================");
		System.out.println("*       Digite o termo da pesquisa        *");
		System.out.println(" ==========================================");
		String termo = sc.nextLine();
		try {
			
		} catch (Exception e) {
			System.out.println("Erro: " + e.getMessage());
		}
	}
	
	private void pesquisarUsuario() {
		System.out.println(" ==========================================");
		System.out.println("*       Digite o termo da pesquisa        *");
		System.out.println(" ==========================================");
		String termo = sc.nextLine();
		try {
			
		} catch (Exception e) {
			System.out.println("Erro: " + e.getMessage());
		}
	}
	private void devolucao() {
		System.out.println(" ==========================================");
		System.out.println("*    Digite o termo da titulo do livro    *");
		System.out.println(" ==========================================");
		String tituloLivro = sc.nextLine();
		try {
			
		} catch (Exception e) {
			System.out.println("Erro: " + e.getMessage());
		}
	}
}
